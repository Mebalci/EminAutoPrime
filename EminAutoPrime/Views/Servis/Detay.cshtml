@model ServisKayitDetayViewModel 
@{
    ViewBag.Title = "Servis Detayları";
    ViewData["Title"] = "Servis Detayları";
    Layout = User.IsInRole("Admin") ? "~/Views/Shared/Admin.cshtml" : "_Calisan";
}
<style>
    .add-parca-ekle {
        background-color: var(--bs-primary);
        color: white;
        border: 2px solid var(--bs-primary);
        padding: 10px 20px;
        font-size: 1rem;
        font-weight: bold;
        border-radius: 5px;
        transition: background-color 0.3s, color 0.3s;
    }

        .add-parca-ekle:hover {
            background-color: white;
            color: var(--bs-primary);
        }

    .add-islem-ekle {
        background-color: var(--bs-info);
        color: white;
        border: 2px solid var(--bs-info);
        padding: 10px 20px;
        font-size: 1rem;
        font-weight: bold;
        border-radius: 5px;
        transition: background-color 0.3s, color 0.3s;
    }

        .add-islem-ekle:hover {
            background-color: white;
            color: var(--bs-info);
        }

    .add-servis-düzenle {
        background-color: var(--bs-warning);
        color: white;
        border: 2px solid var(--bs-warning);
        padding: 10px 20px;
        font-size: 1rem;
        font-weight: bold;
        border-radius: 5px;
        transition: background-color 0.3s, color 0.3s;
    }

        .add-servis-düzenle:hover {
            background-color: white;
            color: var(--bs-warning);
        }

    .delete-btn {
        background-color: var(--bs-danger);
        color: white;
        border: 2px solid var(--bs-danger);
        padding: 5px 15px;
        font-size: 0.875rem;
        font-weight: bold;
        border-radius: 5px;
        transition: background-color 0.3s, color 0.3s;
    }

        .delete-btn:hover {
            background-color: white;
            color: var(--bs-danger);
        }

    .card-header {
        background-color: var(--bs-primary);
        color: white;
        font-size: 1.25rem;
        font-weight: bold;
    }

    .card-body p {
        font-size: 1rem;
        margin-bottom: 0.5rem;
    }

    .card-body span {
        font-weight: bold;
    }

    .card-item {
        background-color: var(--bs-primary);
        color: white;
        border-radius: 10px;
        padding: 15px;
        text-align: center;
        font-size: 1.1rem;
        font-weight: bold;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        cursor: pointer;
    }

        .card-item:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 10px rgba(0, 0, 0, 0.2);
        }

    .card-container {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin-top: 30px;
    }
</style>

<div class="container " style="margin-top:100px">
    <!-- Servis Detayları Kartı -->
    <div class="card shadow">
        <div class="card-header">
            <h3 class="mb-0">Servis Detayları</h3>
        </div>
        <div class="card-body">
            <div class="container">                
                <div class="card-container">                   
                    <div class="card-item">
                        Araç: 
                       <div>
                            @Model.AracBilgisi
                       </div> 
                    </div>                    
                    <div class="card-item">
                        Başlangıç Tarihi:
                        <div>
                            @Model.BaslangicTarihi.ToString("dd.MM.yyyy")
                        </div>                        
                    </div>                    
                    <div class="card-item">
                        Tahmini Bitiş:
                        <div>
                            @Model.TahminiBitisTarihi?.ToString("dd.MM.yyyy")
                        </div>                        
                    </div>                    
                    <div class="card-item">
                        Durum:
                        <div>
                            @Model.Durum
                        </div>                        
                    </div>                    
                    <div class="card-item">
                        Toplam Maliyet:
                        <div>
                            @Model.Islemler.Where(islem => islem.IslemId == @Model.ServisId).Sum(islem => islem.IslemMaliyeti) TL
                        </div>                        
                    </div>                    
                    <div class="card-item">
                        Servis Alanı: 
                        <div>
                            @Model.ServisAlani
                        </div>                        
                    </div>
                </div>
            </div>
            <div class="mt-4 d-flex gap-2">
                <button class="add-parca-ekle" data-bs-toggle="modal" data-bs-target="#addParcaModal">Parça Ekle</button>
                <button class="add-islem-ekle" data-bs-toggle="modal" data-bs-target="#addIslemModal">İşlem Ekle</button>
                <button class="add-servis-düzenle" data-bs-toggle="modal" data-bs-target="#editServisModal">Servis Düzenle</button>
            </div>
        </div>
    </div>

    <!-- Takılan Parçalar Tablosu -->
    <div class="card mt-4 shadow">
        <div class="card-header text-white" style="background-color: var(--bs-primary);">
            <h3 class="mb-0">Takılan Parçalar</h3>
        </div>
        <div class="card-body">
            <table class="table">
                <thead>
                    <tr>
                        <th>Parça Adı</th>
                        <th>Fiyat</th>                        
                    </tr>
                </thead>
                <tbody id="parcalarTableBody">
                    @foreach (var parca in Model.Parcalar)
                    {
                        <tr>
                            <td>@parca.ParcaAdi</td>
                            <td>@parca.Fiyat TL</td>                            
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Yapılan İşlemler Tablosu -->
    <div class="card mt-4 shadow">
        <div class="card-header text-white" style="background-color: var(--bs-primary);">
            <h3 class="mb-0">Yapılan İşlemler</h3>
        </div>
        <div class="card-body">
            <table class="table">
                <thead>
                    <tr>
                        <th>İşlem Adı</th>
                        <th>Açıklama</th>
                        <th>Maliyet</th>
                        <th>Tarih</th>                         
                    </tr>
                </thead>
                <tbody id="islemlerTableBody">
                    @foreach (var islem in Model.Islemler)
                    {
                        <tr>
                            <td>@islem.IslemAdi</td>
                            <td>@islem.IslemAciklama</td>
                            <td>@islem.IslemMaliyeti TL</td>
                            <td>@islem.IslemTarihi.ToString("dd.MM.yyyy")</td>                            
                        </tr>
                    }
                </tbody>

            </table>
        </div>
    </div>
</div>

<!-- Parça Ekle Modal -->
<div class="modal fade" id="addParcaModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title">Yeni Parça Ekle</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="kategoriDropdown">Kategori</label>
                    <select id="kategoriDropdown" class="form-control">
                        <option value="">Kategori Seç</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label for="parcaDropdown">Parça</label>
                    <select id="parcaDropdown" class="form-control">
                        <option value="">Önce kategori seçin</option>
                    </select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                <button class="btn btn-success"
                        data-bs-toggle="modal"
                        data-bs-target="#addParcaModal"
                        id="btnAddParca"
                        data-servis-id="@Model.ServisId"
                        data-servis-alani-id="@Model.ServisAlaniId">
                    Parça Ekle
                </button>
            </div>
        </div>
    </div>
</div>


<!-- İşlem Ekle Modal -->
<div class="modal fade" id="addIslemModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-info text-white">
                <h5 class="modal-title">Yeni İşlem Ekle</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="tahminiBitisTarihi">Tahmini Bitiş Tarihi</label>
                    <input type="date" id="tahminiBitisTarihi" class="form-control" />
                </div>
                <div class="mb-3">
                    <label for="islemAciklama">Açıklama</label>
                    <textarea id="islemAciklama" class="form-control"></textarea>
                </div>
                <div class="mb-3">
                    <label for="islemMaliyeti">Maliyet</label>
                    <input type="number" id="islemMaliyeti" class="form-control" />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                <button type="button" id="btnAddIslem" class="btn btn-info">Ekle</button>
            </div>
        </div>
    </div>
</div>

<!-- Servis Düzenle Modal -->
<div class="modal fade" id="editServisModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-warning text-white">
                <h5 class="modal-title">Servis Bilgilerini Düzenle</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="servisDurumDropdown">Servis Durumu</label>
                    <select id="servisDurumDropdown" class="form-control">
                        <option value="">Durum Seç</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label for="servisAlaniId">Servis Alanı</label>
                    <button type="button" id="btnEditServisAlani" class="btn btn-warning" onclick="ServisAlaniSec(@Model.ServisId)">Servis Alanı Değiştir</button>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                <button type="button" id="btnEditServis" class="btn btn-warning">Kaydet</button>
            </div>
        </div>
    </div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", () => {
         
        $.get("/Servis/GetParcaKategori", (data) => {
            data.forEach((kategori) => {
                $("#kategoriDropdown").append(
                    `<option value="${kategori.kategoriId}">${kategori.kategoriAdi}</option>`
                );
            });
        });

        $.get("/Servis/GetServisDurumlari", (data) => {
        data.forEach((durum) => {
            $("#servisDurumDropdown").append(
                `<option value="${durum.durumId}">${durum.durumAdi}</option>`
            );
        });
        });

        $("#btnEditServis").on("click", () => {
            const servisId = @Model.ServisId; 
            const durumId = $("#servisDurumDropdown").val();  
                 
            if (!durumId) {
                alert("Lütfen bir servis durumu seçin.");
                return;
            }
                
            $.post("/Servis/ServisGuncelle", { servisId, durumId }, (response) => {
                if (response.success) {
                    alert(response.message);
                    location.reload();
                } else {
                    alert(response.message);
                }
            }).fail(() => {
                alert("Bir hata oluştu. Lütfen tekrar deneyin.");
            });
        });

                
        $("#kategoriDropdown").on("change", function () {
            const kategoriId = $(this).val();
            $("#parcaDropdown").empty().append(`<option value="">Seçiniz</option>`);

            if (kategoriId) {
                $.get(`/Servis/GetParcalarByKategori?kategoriId=${kategoriId}`, (data) => {
                    data.forEach((parca) => {
                        $("#parcaDropdown").append(
                            `<option value="${parca.parcaId}">${parca.parcaAdi} - ${parca.fiyat} TL</option>`
                        );
                    });
                });
            }
        });
        
        $("#btnAddParca").on("click", () => {
            const servisId = $("#btnAddParca").data("servis-id");
            const servisAlaniId = $("#btnAddParca").data("servis-alani-id");
            const parcaId = $("#parcaDropdown").val();
            const ekAciklama = $("#ekAciklama").val();  

            if (!parcaId) {
                alert("Lütfen bir parça seçin.");
                return;
            }

            $.post("/Servis/ParcaEkle", {
                servisId: servisId,
                parcaId: parcaId,
                servisAlaniId: servisAlaniId,
                ekAciklama: ekAciklama
            }, function (response) {
                if (response.success) {
                    alert(response.message);
                    location.reload();
                } else {
                    alert(response.message);
                }
            });
        });

        $("#btnAddIslem").click(function () {
            const servisId = @Model.ServisId;
            const islemAciklama = $("#islemAciklama").val();
            const islemMaliyeti = parseFloat($("#islemMaliyeti").val()) || 0;
            const tahminiBitisTarihi = $("#tahminiBitisTarihi").val();
            const servisAlaniId = @Model.ServisAlaniId;

            if (!islemAciklama) {
                alert("Lütfen işlem açıklamasını giriniz.");
                return;
            }

            $.post("/Servis/IslemEkle", {
                servisId,
                islemAciklama,
                islemMaliyeti,
                tahminiBitisTarihi,
                servisAlaniId
            }, function (response) {
                if (response.success) {
                    alert(response.message);
                    location.reload();
                } else {
                    alert(response.message);
                }
            });
        });

    });    

    function ServisAlaniSec(servisId) {
        if (servisId) {
            window.location.href = `/Servis/ServisAlaniSec?servisId=${servisId}`;
        } else {
            alert("Servis ID bulunamadı.");
        }
    }

</script>


